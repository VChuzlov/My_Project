unit FunctionsUnit;

interface

uses
  TypesUnit;

function Max(x: TarrOfDouble): Double;
function Min(x: TarrOfDouble): Double;
function VietaMethod(a, b, c: Double): TArrOfDouble;

implementation

function Max(x: TArrOfDouble): Double;
var
  i: Integer;
begin
  Result := x[0];
  for i := 1 to High(x) do
    if Result < x[i] then
      Result := x[i];
end;

function Min(x: TarrOfDouble): Double;
var
  i: Integer;
begin
  Result := x[0];
  for i := 1 to High(x) do
    if Result > x[i] then
      Result := x[i];
end;

function VietaMethod(a, b, c: Double): TArrOfDouble;
var
  x1, x2, x3: Double;
  q, r, s: Double;
  fi, s_: Double;
begin
  SetLength(Result, 3);

  q := (a * a - 3 * b) / 9;
  r := (2 * a * a * a - 9 * a * b + 27 * c) / 54;
  s := q * q * q - r * r;

end;

end.
