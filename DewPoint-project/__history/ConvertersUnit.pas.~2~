unit ConvertersUnit;

interface

type
  TTemperature = class
    function CelsiusToKelvin(c: double): double;
    function KelvinToCelsius(k: double): double;
    function CelciusToFahrenheit(c: double): double;
    function FahrenheitToCelsius(f: double): double;
    function CelsiusToRankine(c: double): double;
    function RankineToCelsius(r: double): double;
    function KelvinToRankine(k: double): double;
    function RankineToKelvin(r: double): double;
    function KelvinToFahrenheit(k: double): double;
    function FahrenheitToKelvin(f: double): double;
    function FahrenheitToRankine(f: double): double;
  end;

  TUnitsConverter = class
    //
  end;

implementation


{ TTemperature }

function TTemperature.CelciusToFahrenheit(c: double): double;
begin
  Result := c * 9 / 5 + 32;
end;

function TTemperature.CelsiusToKelvin(c: double): double;
begin
  Result := c + 273.15;
end;

function TTemperature.CelsiusToRankine(c: double): double;
begin
  Result := c * 9 / 5 + 491.67;
end;

function TTemperature.FahrenheitToCelsius(f: double): double;
begin
  Result := (f - 32) * 5 / 9;
end;

function TTemperature.FahrenheitToKelvin(f: double): double;
begin

end;

function TTemperature.FahrenheitToRankine(f: double): double;
begin

end;

function TTemperature.KelvinToCelsius(k: double): double;
begin
  Result := k - 273.15;
end;

function TTemperature.KelvinToFahrenheit(k: double): double;
begin

end;

function TTemperature.KelvinToRankine(k: double): double;
begin

end;

function TTemperature.RankineToCelsius(r: double): double;
begin

end;

function TTemperature.RankineToKelvin(r: double): double;
begin

end;

end.
