unit Unit1;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, System.DateUtils,
  Vcl.Graphics, Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls,
  ConvertersUnit, TypesUnit, DewPointUnit;

type
  TForm1 = class(TForm)
    Button1: TButton;
    procedure Button1Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form1: TForm1;

implementation

{$R *.dfm}

procedure TForm1.Button1Click(Sender: TObject);
const
  Tc: TArrOfDouble = [
     -82.451,   32.278,   96.748,  134.946,  152.049,
     187.248,  196.450,  234.748,  267.008,  295.448,
     321.448,  344.448,  365.149,  385.149,  402.649,
     420.850,  433.850,  443.850,  460.220,  472.110,
     482.779,  494.850,  504.850,  513.850,  522.850,
     530.850,  538.850,  545.850,  552.850,  558.850,
     564.850,  589.850,  160.628,  224.347,  231.299,
     231.299,  226.830,  257.219,  262.100,  267.490,
     247.350,  264.198,  246.639,  263.248,  258.019,
     286.488,  290.519,  288.589,  292.339,  276.719,
     290.339,  280.370,  276.909,  288.870,  295.698,
     293.938,  303.430,  290.350,  270.810,  300.409,
     293.258,  294.800,  336.899,  313.600,  317.000,
     314.500,  317.399,  314.800,  304.600,  316.500,
     303.698,  308.000,  304.800,  315.399,  318.800,
     310.100,  312.297,  315.100,  306.998,  324.399
  ];
  Pc: TArrOfDouble = [
    4640.680, 4883.850, 4256.660, 3647.620, 3796.620,
    3333.590, 3375.120, 3031.620, 2736.780, 2496.620,
    2300.070, 2107.550, 1964.930, 1829.920, 1723.530,
    1620.180, 1516.810, 1420.560, 1316.900, 1213.470,
    1116.950, 1160.000, 1110.000, 1060.000, 1020.000,
     980.000,  950.000,  910.000,  883.000,  850.000,
     826.000,  868.000, 3198.820, 3010.360, 3123.840,
    3880.620, 3126.870, 2733.620, 2813.790, 2890.800,
    2773.260, 2908.020, 2736.780, 2945.510, 2953.620,
    2484.370, 2546.290, 2542.120, 2608.100, 2529.070,
    2628.370, 2556.370, 2486.510, 2653.620, 2692.120,
    2700.310, 2807.620, 2729.620, 2567.570, 2819.870,
    2729.620, 2867.370, 2674.870, 2289.870, 2340.600,
    2340.600, 2401.370, 2391.260, 2320.340, 2401.370,
    2340.600, 2350.620, 2300.070, 2431.800, 2462.120,
    2401.370, 2431.800, 2452.060, 2401.370, 2553.370
  ];
  Af: TArrOfDouble = [
     0.011,    0.099,    0.152,    0.185,    0.201,
     0.222,    0.254,    0.301,    0.350,    0.402,
     0.445,    0.488,    0.535,    0.562,    0.623,
     0.679,    0.706,    0.765,    0.770,    0.800,
     0.827,    0.907,    0.942,    0.972,    1.026,
     1.071,    1.105,    1.154,    1.214,    1.238,
     1.265,    1.307,    0.196,    0.279,    0.275,
     0.232,    0.247,    0.340,    0.327,    0.314,
     0.300,    0.305,    0.307,    0.287,    0.260,
     0.384,    0.369,    0.369,    0.364,    0.343,
     0.340,    0.341,    0.346,    0.326,    0.327,
     0.340,    0.292,    0.297,    0.310,    0.290,
     0.320,    0.247,    0.338,    0.417,    0.418,
     0.415,    0.416,    0.413,    0.390,    0.385,
     0.397,    0.403,    0.402,    0.360,    0.379,
     0.403,    0.364,    0.377,    0.399,    0.351
  ];
  Vc: TArrOfDouble = [
     0.099,    0.148,    0.200,    0.263,    0.255,
     0.308,    0.311,    0.368,    0.426,    0.486,
     0.543,    0.602,    0.660,    0.713,    0.780,
     0.830,    0.880,    0.940,    1.006,    1.070,
     1.130,    1.190,    1.245,    1.301,    1.356,
     1.411,    1.465,    1.518,    1.571,    1.622,
     1.673,    1.724,    0.303,    0.366,    0.366,
     0.359,    0.358,    0.421,    0.404,    0.416,
     0.416,    0.393,    0.418,    0.414,    0.398,
     0.488,    0.464,    0.476,    0.455,    0.478,
     0.468,    0.472,    0.482,    0.443,    0.466,
     0.443,    0.455,    0.436,    0.468,    0.455,
     0.461,    0.461,    0.473,    0.541,    0.529,
     0.523,    0.511,    0.505,    0.526,    0.515,
     0.517,    0.522,    0.535,    0.506,    0.503,
     0.510,    0.501,    0.497,    0.504,    0.487
  ];
  Pressure: Double = 101.325;
//  Yi: TArrOfDouble = [0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1];
//    Yi: TArrOfDouble = [
//      0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05,
//      0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05
//    ];
//    Yi: TArrOfDouble = [
//      0.0333, 0.0333, 0.0333, 0.0333, 0.0333, 0.0333, 0.0333, 0.0333, 0.0333,
//      0.0333, 0.0333, 0.0333, 0.0333, 0.0333, 0.0333, 0.0333, 0.0333, 0.0333,
//      0.0333, 0.0333, 0.0333, 0.0333, 0.0333, 0.0333, 0.0333, 0.0333, 0.0333,
//      0.0333, 0.0333, 0.0333
//    ];
var
  uc: TUnitsConverter;
  dp: TDewPoint;
  TDew: Double;
  Start, Stop: TDateTime;
  Elapsed: Double;
  iCounterPerSec: TLargeInteger;
  T1, T2: TLargeInteger;  // значение счётчика ДО и ПОСЛЕ операции
  Yi: TArrOfDouble;
begin
  SetLength(Yi, 80);
  for var i := 0 to High(Yi) do
    Yi[i] := 0.0125;

  Start := Now();
  QueryPerformanceFrequency(iCounterPerSec);  // определили частоту счётчика
  QueryPerformanceCounter(T1);  // засекли время начала операции

  uc := TUnitsConverter.Create();
  dp := TDewPoint.Create(
    Pressure, Yi, Tc, Pc, Af, Vc
  );
  TDew := dp.Calculation();

  QueryPerformanceCounter(T2);  // засекли время окончания
  Stop := Now();
  Elapsed := SecondsBetween(Start, Stop);  // время в секундах
  ShowMessage(
    FloatToStr(uc.Temperature.RankineToCelsius(TDew))
    + ' Elapsed at: ' + FormatFloat('0.0000', (T2 - T1)/iCounterPerSec) + ' sec.'
  );
end;

end.
